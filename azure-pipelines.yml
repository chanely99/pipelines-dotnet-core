# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pr: 
  - master
  - development
  - feature*
pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  branch: ''

stages: 
- stage: deploy_with_manual_approval
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      vmImage: 'Ubuntu-latest'
    # creates an environment if it doesn't exist
    environment: manual-approval-test
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo Hello world

- stage: build
  jobs: 
  - job: build
    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
    - task: PowerShell@2
      displayName: git configuration
      inputs:
        targetType: 'inline'
        script: |
          git config --global user.email "chanelyoung99@gmail.com"
          git config --global user.name "Chanel Young"

- stage: branch_specific
  jobs: 
    - job: master_job
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
      steps:    
      - template: development-steps.yml
      - task: PowerShell@2
        displayName: 'versioning master'
        inputs:
          filePath: '$(Build.SourcesDirectory)/versioner.PS1'
    - job: development_job
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/development')
      steps: 
      - task: PowerShell@2
        displayName: 'versioning development'
        inputs:
          filePath: '$(Build.SourcesDirectory)/versioner.PS1'
          arguments: "minor"
    - job: feature_branch_job
      condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/feature') 
      steps: 
      - task: PowerShell@2
        displayName: 'versioning feature'
        inputs:
          filePath: '$(Build.SourcesDirectory)/versioner.PS1'
          arguments: "minor"
- stage: testing
  jobs:
    - job: test_1
      steps: 
      - task: DotNetCoreCLI@2
        inputs:
          command: 'test'
          projects: '$(Build.SourcesDirectory)/Tests/Tests.csproj'
- stage: create_artifact
  jobs: 
    - job: create
      steps: 
      - publish: $(Build.SourcesDirectory)/bin/Release
        artifact: Release